services:
  db:
    image: postgres:12
    restart: "no"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

  backend:
    restart: "on-failure"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: ./build/Dockerfile
    ports:
      - "8080:8080"
    develop:
      watch:
        - action: rebuild
          path: ./**/*

  frontend:
    restart: "no"
    build:
      context: ./frontend
      args:
        - VITE_API_URL=http://localhost:8000
        - NODE_ENV=development
      target: base
    ports:
      - "5173:5173"
    command: >
      npm run dev
      --
      --host 0.0.0.0
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend/src/routeTree.gen.ts:/app/src/routeTree.gen.ts
    develop:
      watch:
        - path: ./frontend
          action: sync
          target: /app
          ignore:
            - ./src/routeTree.gen.ts
        - path: ./frontend/package.json
          action: rebuild
  proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    env_file:
      - .env
    ports:
      - "4180:4180"
    command:
      - "--upstream=http://frontend:5173/"
      - "--upstream=http://backend:8080/api"
      - "--upstream=http://lokal-token-printer:8080/token"
      - "--provider=oidc"
      - "--email-domain=*"
      - "--pass-authorization-header"
      - "--insecure-oidc-allow-unverified-email"
      - "--http-address=:4180"
      - "--skip-provider-button"
      - "--cookie-csrf-per-request=true"
      - "--cookie-csrf-expire=5m"
      - "--cookie-secure=false"

  lokal-token-printer:
    image: ghcr.io/nginxinc/nginx-unprivileged:stable-alpine
    volumes:
      - ./lokal-token-printer-config.conf:/etc/nginx/conf.d/default.conf

volumes:
  app-db-data:
